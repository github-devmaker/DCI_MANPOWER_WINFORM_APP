
        <!DOCTYPE html>
        <html lang="en">
          <head>
            <meta charset="UTF-8" />
            <title>Error</title>
            <script type="module">
              import { ErrorOverlay } from '/@vite/client'
              document.body.appendChild(new ErrorOverlay({"message":"\n  × Expected ident\n    ╭─[D:/git/DCI_MANPOWER_CHECKIN_APP/src/pages/Manpower/ManpowerView.jsx:65:1]\n 65 │   const [refreshContent, setRefreshContent] = useState(false);\n 66 │   const [inpType, setInpType] = useState('');\n 67 │   const \n 68 │   const ThemeTrue = {\n    ·   ─────\n 69 │     bg: [\"yellow\", \"#bba17a\", \"#b88a45\"],\n 70 │     text: \"#333333\",\n 70 │   };\r\n    ╰────\n\n\nCaused by:\n    Syntax Error","stack":"","id":"D:/git/DCI_MANPOWER_CHECKIN_APP/src/pages/Manpower/ManpowerView.jsx","frame":"","plugin":"vite:react-swc","pluginCode":"import {\r\n  Button,\r\n  Typography,\r\n  Stack,\r\n  Backdrop,\r\n  CircularProgress,\r\n  Box,\r\n  IconButton,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Avatar,\r\n  CardHeader,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n(\"../Service\");\r\nimport {\r\n  API_ANDON_BOARD,\r\n  API_GET_LAYOUT,\r\n  API_GET_MASTER,\r\n  API_GET_MQ,\r\n  API_GET_OBJECT_INFO,\r\n  API_GET_OBJECT_OF_LAYOUT,\r\n  API_GET_SA,\r\n} from \"../../Service\";\r\nimport LoopIcon from '@mui/icons-material/Loop';\r\nimport DialogCheckin from \"../../components/DialogCheckin\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { persistor } from \"../../redux/store\";\r\nimport moment from \"moment\";\r\nimport ApiSharpIcon from '@mui/icons-material/ApiSharp';\r\nimport FmdGoodOutlinedIcon from '@mui/icons-material/FmdGoodOutlined';\r\nimport Diversity3OutlinedIcon from '@mui/icons-material/Diversity3Outlined';\r\nimport EngineeringOutlinedIcon from '@mui/icons-material/EngineeringOutlined';\r\nimport KeyboardDoubleArrowDownIcon from '@mui/icons-material/KeyboardDoubleArrowDown';\r\nimport HandymanOutlinedIcon from '@mui/icons-material/HandymanOutlined';\r\nimport DialogSelectLine from \"../../components/DialogSelectLine\";\r\nimport CircleIcon from '@mui/icons-material/Circle';\r\nfunction ManpowerView() {\r\n  const [openSelectLine, setOpenSelectLine] = useState(false);\r\n  const [numLoop, setNumLoop] = useState(0);\r\n  let { layout } = useParams();\r\n  const navigate = useNavigate();\r\n  const VITE_PATH = import.meta.env.VITE_PATH;\r\n  const [openCheckIn, setOpenCheckIn] = useState(false);\r\n  const [masters, setMasters] = useState([]);\r\n  const [objects, setObjects] = useState([]);\r\n  const [objectCode, setObjectCode] = useState({});\r\n  const [objSelected, setObjSelected] = useState({});\r\n  const [layoutSelected, setLayoutSelected] = useState([]);\r\n  const [backdrop, setBackdrop] = useState(true);\r\n  const [once, setOnce] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const widthNav = 15\r\n  const [openTab, setOpenTab] = useState(widthNav);\r\n  const [percentCheckIn, setPercentCheckIn] = useState(0);\r\n  let shiftRedux = useSelector(state => state.reducer.shift);\r\n  const [summaryMQ, setSummaryMQ] = useState({});\r\n  const [summarySA, setSummarySA] = useState({});\r\n  const [foreman, setForeman] = useState({});\r\n  const [andon, setAndon] = useState([]);\r\n  const [refreshContent, setRefreshContent] = useState(false);\r\n  const [inpType, setInpType] = useState('');\r\n  const \r\n  const ThemeTrue = {\r\n    bg: [\"yellow\", \"#bba17a\", \"#b88a45\"],\r\n    text: \"#333333\",\r\n  };\r\n  const ThemeFalse = {\r\n    bg: [\"#fff\", \"#6d1803\", \"#6d210f\"],\r\n    text: \"white\",\r\n  };\r\n  let svgContent = \"\";\r\n  useEffect(() => {\r\n    if (once) {\r\n      initDT();\r\n      init();\r\n      setObjSelected({});\r\n      setOnce(false);\r\n      const interval = setInterval(() => {\r\n        console.log('loop num ')\r\n        setNumLoop(numLoop + 1);\r\n      }, 10000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [once]);\r\n\r\n  useEffect(() => {\r\n    if (refreshContent) {\r\n      intialData();\r\n    }\r\n  }, [refreshContent])\r\n\r\n  async function initDT() {\r\n    let fmTime = 'HH:mm:ss'\r\n    let hh_current = moment().format('HH');\r\n    let mm_current = moment().format('mm');\r\n    let ss_current = moment().format('ss');\r\n    let ymd_current = `${hh_current}:${mm_current}:${ss_current}`;\r\n    let adjShift = '';\r\n    if (moment(ymd_current, fmTime) >= moment('08:00:00', fmTime) && moment(ymd_current, fmTime) \u003c= moment('20:00:00', fmTime)) { // 07:50 - 19:50\r\n      adjShift = 'D';\r\n    } else {\r\n      adjShift = 'N';\r\n    }\r\n    if ((shiftRedux == '' || shiftRedux == null) || (shiftRedux != '' && shiftRedux != null && (adjShift != shiftRedux))) {\r\n      dispatch({ type: 'SET_SHIFT', payload: adjShift });\r\n      await new Promise(r => setTimeout(() => location.reload(), 2000));\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (typeof layoutSelected == 'object' && Object.keys(layoutSelected).length) {\r\n      getAndonBoardData()\r\n    }\r\n  }, [layoutSelected]);\r\n\r\n  useEffect(() => {\r\n    initDT();\r\n  }, [numLoop]);\r\n\r\n  useEffect(() => {\r\n\r\n    const intervalAndonBoard = setInterval(() => {\r\n      getAndonBoardData();\r\n    }, 180000);\r\n    return () => clearInterval(intervalAndonBoard);\r\n  }, [andon]);\r\n\r\n  useEffect(() => {\r\n    if (typeof objects == 'object' && Object.keys(objects).length) {\r\n      // let fo = objects.filter(o => o.)\r\n      let fo = objects.filter(o => o.objType == 'MP' && o.objPosition == 'FO' && o.objStatus == 'ACTIVE' && o.empCode != '');\r\n      if (fo.length) {\r\n        setForeman(fo[0]);\r\n      } else {\r\n        setForeman({});\r\n      }\r\n    }\r\n  }, [objects])\r\n\r\n  async function getAndonBoardData() {\r\n    let res = await API_ANDON_BOARD({ boardId: layoutSelected.boardId });\r\n    if (typeof res == 'object') {\r\n      setAndon([...res])\r\n    }\r\n  }\r\n\r\n  const init = async () => {\r\n    let listLayout = await API_GET_LAYOUT();\r\n    setLayouts(listLayout.filter(o => o.layoutName != 'TEST'));\r\n    const getLayout = await API_GET_LAYOUT(layout);\r\n    if (getLayout != null && getLayout.length) {\r\n      let mq = await API_GET_MQ();\r\n      mq = mq.filter((itemMQ) => {\r\n        return itemMQ.factory == getLayout[0].factory && itemMQ.subLine == getLayout[0].subLine\r\n      })\r\n      let sa = await API_GET_SA();\r\n      dispatch({\r\n        type: 'SET_LAYOUT_SELECTED', payload: {\r\n          layout: getLayout[0],\r\n          mq: mq,\r\n          sa: sa\r\n        }\r\n      });\r\n      setLayoutSelected(getLayout[0]);\r\n      await intialData();\r\n    }\r\n  };\r\n  const [layouts, setLayouts] = useState([]);\r\n  const [listPosition, setListPosition] = useState([\r\n    'FO', 'LE', 'QA', 'OP'\r\n  ])\r\n  async function getObjectOfLayout() {\r\n    const object = await API_GET_OBJECT_OF_LAYOUT({\r\n      layoutCode: layout,\r\n    });\r\n    if (typeof object == 'object' && object.length) {\r\n      setObjects(object)\r\n    }\r\n  }\r\n  const intialData = async () => {\r\n    setBackdrop(true);\r\n    const listMaster = await API_GET_MASTER();\r\n    const object = await API_GET_OBJECT_OF_LAYOUT({\r\n      layoutCode: layout,\r\n    });\r\n    setMasters(listMaster);\r\n    await getObjectOfLayout();\r\n    setObjects(object);\r\n    setPercentCheckIn(((object.filter((o => o.objType == 'MP' && o.empCode != '')).length / object.filter((o => o.objType == 'MP')).length) * 100))\r\n    svgContent = document.querySelector(\"#svgContent\");\r\n    if (svgContent != undefined) {\r\n      svgContent.innerHTML = \"\";\r\n      let svgMaster = \"\";\r\n      let svg = \"\";\r\n      await object.map((elObj) => {\r\n        svgMaster = elObj.objSvg;\r\n        svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        let mSkill = elObj.manskill;\r\n        if (elObj.objSvg.includes('bg-set')) {\r\n          const itemSvg = document.createElementNS(\r\n            \"http://www.w3.org/2000/svg\",\r\n            \"svg\"\r\n          );\r\n          itemSvg.innerHTML = svgMaster;\r\n          let BgParent = itemSvg.querySelector('#bgTitle');\r\n          let BGChild = BgParent.querySelector('rect');\r\n          let svgChild = itemSvg.querySelector('g>svg');\r\n          BGChild.setAttribute('width', elObj.objWidth);\r\n          BGChild.setAttribute('height', elObj.objHeight);\r\n          BGChild.setAttribute('fill', elObj.objBackgroundColor != '' ? elObj.objBackgroundColor : 'blue');\r\n          BGChild.setAttribute('stroke', elObj.objBorderColor != '' ? elObj.objBorderColor : 'black')\r\n          if (elObj.objBorderColor != '') {\r\n            BGChild.setAttribute('stroke-width', elObj.objBorderColor != '' ? 3 : 0)\r\n          }\r\n          svgChild.setAttribute('width', elObj.objWidth);\r\n          svgChild.setAttribute('height', elObj.objHeight);\r\n          const blob = new Blob([itemSvg.innerHTML], { type: \"image/svg+xml\" });\r\n          const url = URL.createObjectURL(blob);\r\n          const use = document.createElementNS(\r\n            \"http://www.w3.org/2000/svg\",\r\n            \"use\"\r\n          );\r\n          use.setAttribute(\"href\", url + \"#\" + elObj.objMasterId);\r\n          use.setAttribute(\"id\", elObj.objCode);\r\n          use.setAttribute(\"x\", elObj.objX);\r\n          use.setAttribute(\"y\", elObj.objY);\r\n          use.addEventListener(\"click\", function () {\r\n            if (elObj.objType == \"MP\") {\r\n              setObjSelected(elObj);\r\n            }\r\n          });\r\n          svg.appendChild(use);\r\n        } else if (elObj.objSvg.includes(\"animateMotion\")) {\r\n          let itemSvg = document.createElementNS(\r\n            \"http://www.w3.org/2000/svg\",\r\n            \"svg\"\r\n          );\r\n          elObj.objSvg = elObj.objSvg.replace(\"\u003cdefs>\", \"\");\r\n          elObj.objSvg = elObj.objSvg.replace(\"{objName}\", elObj.objTitle);\r\n          elObj.objSvg = elObj.objSvg.replace(\"{objName}\", elObj.objTitle);\r\n          elObj.objSvg = elObj.objSvg.replace(\"{empcode}\", elObj.empCode);\r\n          elObj.objSvg = elObj.objSvg.replace(\"{empcode}\", elObj.empCode);\r\n          elObj.objSvg = elObj.objSvg.replace(\"{obj_man_skill}\", mSkill);\r\n          (elObj.mq == \"TRUE\" ? ThemeTrue.bg : ThemeFalse.bg).map(\r\n            (theme) => {\r\n              elObj.objSvg = elObj.objSvg.replace(`{bgmq}`, theme);\r\n            }\r\n          );\r\n          (elObj.sa == \"TRUE\" ? ThemeTrue.bg : ThemeFalse.bg).map(\r\n            (theme) => {\r\n              elObj.objSvg = elObj.objSvg.replace(`{bgsa}`, theme);\r\n            }\r\n          );\r\n          (elObj.ot == \"TRUE\" ? ThemeTrue.bg : ThemeFalse.bg).map(\r\n            (theme) => {\r\n              elObj.objSvg = elObj.objSvg.replace(`{bgot}`, theme);\r\n            }\r\n          );\r\n          elObj.objSvg = elObj.objSvg.replace(\"{empImage}\", elObj.empImage);\r\n          itemSvg.innerHTML = elObj.objSvg;\r\n          itemSvg.setAttribute(\"id\", elObj.objCode);\r\n          itemSvg.setAttribute(\"x\", elObj.objX);\r\n          itemSvg.setAttribute(\"y\", elObj.objY);\r\n          itemSvg.addEventListener(\"click\", function () {\r\n            setObjSelected(elObj);\r\n            setOpenCheckIn(true);\r\n          });\r\n          itemSvg = createViewMQSA(elObj, itemSvg);\r\n          svg.appendChild(itemSvg);\r\n        } else if (elObj.objSvg.includes(\"svgTxtTitleMsg\") || elObj.objSvg.includes(\"WidthFollowText\")) {\r\n          const itemSvg = document.createElementNS(\r\n            \"http://www.w3.org/2000/svg\",\r\n            \"svg\"\r\n          );\r\n          elObj.objSvg = elObj.objSvg.replace(\"{objName}\", elObj.objTitle);\r\n          itemSvg.innerHTML = elObj.objSvg;\r\n          var areaFree = document.getElementById('bg')\r\n          var iSpan = document.createElement('span');\r\n          iSpan.innerHTML = elObj.objTitle;\r\n          iSpan.setAttribute('refId', elObj.objCode)\r\n          iSpan.style.fontSize = '10px'\r\n          areaFree.appendChild(iSpan)\r\n          var oSpanAgain = areaFree.querySelector(`span[refid=${elObj.objCode}]`);\r\n          var spanWidth = oSpanAgain.offsetWidth;\r\n          oSpanAgain.remove();\r\n          itemSvg\r\n            .querySelector(\"rect.svgTxtTitleBg\")\r\n            .setAttribute(\"width\", Math.ceil(parseInt(spanWidth)) + 50);\r\n          if (itemSvg.querySelector(\"svg#bgTitle\") != null) {\r\n            itemSvg.querySelector(\"svg#bgTitle\").setAttribute(\"width\", Math.ceil(parseInt(spanWidth)) + 50);\r\n          }\r\n          itemSvg.setAttribute(\"id\", elObj.objCode);\r\n          itemSvg.setAttribute(\"x\", elObj.objX);\r\n          itemSvg.setAttribute(\"y\", elObj.objY);\r\n          svg.appendChild(itemSvg);\r\n        } else if (elObj.objSvg.includes(\"animate\")) {\r\n          const itemSvg = document.createElementNS(\r\n            \"http://www.w3.org/2000/svg\",\r\n            \"svg\"\r\n          );\r\n          itemSvg.innerHTML = elObj.objSvg;\r\n          itemSvg.setAttribute(\"id\", elObj.objCode);\r\n          itemSvg.setAttribute(\"x\", elObj.objX);\r\n          itemSvg.setAttribute(\"y\", elObj.objY);\r\n          if (itemSvg.querySelector('svg').getAttribute('viewBox') != null) {\r\n            itemSvg.querySelector('svg').removeAttribute('viewBox')\r\n          }\r\n          svg.appendChild(itemSvg);\r\n        } else {\r\n          svgMaster = svgMaster.replace(\"{objName}\", elObj.objTitle);\r\n          svgMaster = svgMaster.replace(\"{empcode}\", elObj.empcode);\r\n          svgMaster = svgMaster.replace(\"{title_color_bg}\", elObj.empcode != \"\" ? \"green\" : \"red\");\r\n          svgMaster = svgMaster.replace(\"{obj_man_skill}\", mSkill);\r\n          const blob = new Blob([svgMaster], { type: \"image/svg+xml\" });\r\n          const url = URL.createObjectURL(blob);\r\n          const use = document.createElementNS(\r\n            \"http://www.w3.org/2000/svg\",\r\n            \"use\"\r\n          );\r\n          use.setAttribute(\"href\", url + \"#\" + elObj.objMasterId);\r\n          use.setAttribute(\"id\", elObj.objCode);\r\n          use.setAttribute(\"x\", elObj.objX);\r\n          use.setAttribute(\"y\", elObj.objY);\r\n          use.addEventListener(\"click\", function () {\r\n            if (elObj.objType == \"MP\") {\r\n              setObjSelected(elObj);\r\n            }\r\n          });\r\n          svg.appendChild(use);\r\n        }\r\n        svgContent.appendChild(svg);\r\n      });\r\n      setBackdrop(false)\r\n      return true;\r\n    } else {\r\n      setBackdrop(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (backdrop == false) {\r\n      genSummaryMQ();\r\n      genSummarySA();\r\n    }\r\n  }, [backdrop])\r\n\r\n  // async function handleChangeMenuActive(event, menuNumber) {\r\n  //   console.log(menuNumber)\r\n  //   setMenuActive(menuNumber);\r\n  // }\r\n\r\n\r\n  const handleSelectMenu = (event, newValue) => {\r\n    setLayoutSelected({ ...layouts[newValue] });\r\n  };\r\n\r\n  function createViewMQSA(elObj, elSVG) {\r\n    elSVG.innerHTML = elObj.objSvg;\r\n\r\n    let bgSA = elSVG.querySelector('.bg_sa');\r\n    let txtSA = elSVG.querySelector('.txt_sa');\r\n\r\n    if (txtSA != null) {\r\n      let txtOT = elSVG.querySelector('.txt_ot');\r\n      txtSA.style.fontWeight = 'bold';\r\n      txtOT.style.fontWeight = 'bold';\r\n      if (typeof elObj.objSA != 'undefined' && elObj.objSA.length) {\r\n        bgSA.style.fill = 'yello';\r\n        txtSA.style.fill = 'black';\r\n      } else {\r\n        bgSA.style.fill = 'white';\r\n        txtSA.style.fill = 'white';\r\n      }\r\n      let bgImage = elSVG.querySelector('.bg_img');\r\n      if (typeof elObj.empCode != 'undefined' && elObj.empCode == '') {\r\n        bgImage.style.fill = '#ff4234';\r\n      }\r\n    }\r\n    let bgMQ = elSVG.querySelector('.bg_mq');\r\n    let txtMQ = elSVG.querySelector('.txt_mq');\r\n\r\n    if (txtMQ != null) {\r\n      if (elObj.objCode == 'MP2401110050') {\r\n        console.log(elObj)\r\n      }\r\n      if (typeof elObj.objMQ != 'undefined' && elObj.objMQ.length) {\r\n        // if (elObj.objCode == 'OTH2311100105') {\r\n        //   console.log(txtMQ)\r\n        // }\r\n        bgMQ.style.fill = 'yello';\r\n        txtMQ.style.fill = 'black';\r\n      } else {\r\n        bgMQ.style.fill = 'white';\r\n        txtMQ.style.fill = 'white';\r\n      }\r\n    }\r\n    return elSVG;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (typeof objSelected != 'undefined' && objSelected != undefined && objSelected != '' && Object.keys(objSelected).length > 0) {\r\n      setOpenCheckIn(true);\r\n    }\r\n  }, [objSelected])\r\n\r\n  async function refreshObject(objCode) {\r\n    let res = await API_GET_OBJECT_INFO({ objCode: objCode });\r\n    res = res[0];\r\n    if (res.empCode != \"\") {\r\n      document\r\n        .querySelector(`svg#${objCode} .img_profile`)\r\n        .setAttribute(\"href\", res.empImage);\r\n\r\n      // document.querySelector(`svg#${objCode} .bg_sa`).style.fill = \"yellow\";\r\n      // document.querySelector(`svg#${objCode} .bg_ot`).style.fill = \"yellow\";\r\n\r\n      // document.querySelector(`svg#${objCode} .txt_sa`).style.fill = \"black\";\r\n      // document.querySelector(`svg#${objCode} .txt_ot`).style.fill = \"black\";\r\n      document.querySelector(`svg#${objCode} .bg_img`).style.fill = 'white';\r\n      document.querySelector(`svg#${objCode} .txt_empcode`).textContent = res.empCode;\r\n      if (typeof res.objMQ != 'undefined' && typeof res.objMQ == 'object' && Object.keys(res.objMQ).length) { // CHECK-IN AND HAVE \"MQ\"\r\n        // SET STYLE MQ\r\n        document.querySelector(`svg#${objCode} .bg_mq`).style.fill = \"yellow\";\r\n        document.querySelector(`svg#${objCode} .txt_mq`).style.fill = \"black\";\r\n        // END  \r\n      } else {\r\n        // SET STYLE MQ\r\n        document.querySelector(`svg#${objCode} .bg_mq`).style.fill = \"white\";\r\n        document.querySelector(`svg#${objCode} .txt_mq`).style.fill = \"white\";\r\n        // END  \r\n      }\r\n\r\n      if (typeof res.objSA != 'undefined' && typeof res.objSA == 'object' && Object.keys(res.objSA).length) { // CHECK-IN AND HAVE \"MQ\"\r\n        // SET STYLE SA\r\n        document.querySelector(`svg#${objCode} .bg_sa`).style.fill = \"yellow\";\r\n        document.querySelector(`svg#${objCode} .txt_sa`).style.fill = \"black\";\r\n        // END  \r\n      } else {\r\n        // SET STYLE SA\r\n        document.querySelector(`svg#${objCode} .bg_sa`).style.fill = \"white\";\r\n        document.querySelector(`svg#${objCode} .txt_sa`).style.fill = \"white\";\r\n        // END  \r\n      }\r\n\r\n      if (typeof res.ot != 'undefined' && res.ot == 'TRUE') {\r\n        // SET STYLE OT\r\n        document.querySelector(`svg#${objCode} .bg_ot`).style.fill = \"yellow\";\r\n        document.querySelector(`svg#${objCode} .txt_ot`).style.fill = \"black\";\r\n        // END  \r\n      } else {\r\n        // SET STYLE OT\r\n        document.querySelector(`svg#${objCode} .bg_ot`).style.fill = \"white\";\r\n        document.querySelector(`svg#${objCode} .txt_ot`).style.fill = \"black\";\r\n        // END  \r\n      }\r\n    } else {\r\n      document\r\n        .querySelector(`svg#${objCode} .img_profile`)\r\n        .setAttribute(\"href\", \"\");\r\n\r\n      document.querySelector(`svg#${objCode} .bg_ot`).style.fill = \"#fff\";\r\n      document.querySelector(`svg#${objCode} .txt_ot`).style.fill = \"black\";\r\n      document.querySelector(`svg#${objCode} .bg_img`).style.fill = 'red';\r\n      document.querySelector(`svg#${objCode} .txt_empcode`).textContent = \"\";\r\n\r\n      if (typeof res.objMQ != 'undefined' && typeof res.objMQ == 'object' && Object.keys(res.objMQ).length) { // CHECK-IN AND HAVE \"MQ\"\r\n        // SET STYLE MQ\r\n        console.log(res.objMQ)\r\n        document.querySelector(`svg#${objCode} .bg_mq`).style.fill = \"white\";\r\n        document.querySelector(`svg#${objCode} .txt_mq`).style.fill = \"black\";\r\n        // END  \r\n      } else {\r\n        // SET STYLE MQ\r\n        console.log(res.objMQ)\r\n        document.querySelector(`svg#${objCode} .bg_mq`).style.fill = \"white\";\r\n        document.querySelector(`svg#${objCode} .txt_mq`).style.fill = \"white\";\r\n        // END  \r\n      }\r\n\r\n      if (typeof res.objSA != 'undefined' && typeof res.objSA == 'object' && Object.keys(res.objSA).length) { // CHECK-IN AND HAVE \"MQ\"\r\n        // SET STYLE SA\r\n        document.querySelector(`svg#${objCode} .bg_sa`).style.fill = \"white\";\r\n        document.querySelector(`svg#${objCode} .txt_sa`).style.fill = \"black\";\r\n        // END  \r\n      } else {\r\n        // SET STYLE SA\r\n        document.querySelector(`svg#${objCode} .bg_sa`).style.fill = \"white\";\r\n        document.querySelector(`svg#${objCode} .txt_sa`).style.fill = \"white\";\r\n        // END  \r\n      }\r\n\r\n      if (typeof res.ot != 'undefined' && res.ot == 'TRUE') {\r\n        // SET STYLE OT\r\n        document.querySelector(`svg#${objCode} .bg_ot`).style.fill = \"white\";\r\n        document.querySelector(`svg#${objCode} .txt_ot`).style.fill = \"black\";\r\n        // END  \r\n      } else {\r\n        // SET STYLE OT\r\n        document.querySelector(`svg#${objCode} .bg_ot`).style.fill = \"white\";\r\n        document.querySelector(`svg#${objCode} .txt_ot`).style.fill = \"black\";\r\n        // END  \r\n      }\r\n    }\r\n  }\r\n\r\n  async function handleBacktohome() {\r\n    navigate(`../${VITE_PATH}/management`);\r\n  }\r\n\r\n  async function handleLogout() {\r\n    if (confirm('คุณต้องการออกจากระบบ ใช่หรือไม่ ? ')) {\r\n      persistor.purge();\r\n      navigate(`${VITE_PATH}`);\r\n    }\r\n  }\r\n\r\n  // const ArrNavMenu = [\r\n  //   { text: 'home', icon: \u003cHome />, active: true },\r\n  //   { text: 'andno board', icon: \u003cHome />, active: false },\r\n  //   { text: 'manpower', icon: \u003cHome />, active: false }\r\n  // ]\r\n\r\n  function InitNavMenu({ text, icon, active }) {\r\n    return \u003cBox>\r\n      \u003cStack className={`py-1 pl-3 ${openTab == widthNav && 'pr-3'} bg-white rounded-xl  shadow-nav-menu cursor-pointer text-black font-mono  ${active && 'bg-[#efefef]'}`} justifyContent={'start'} direction={'row'} alignItems={'center'} justifyItems={'center'}>\r\n        {icon}\r\n        {\r\n          openTab != widthNav && \u003cTypography className={`pl-1 pr-2 text-[14px]  py-1 rounded-lg  text-[#171a1e] font-semibold capitalize  `}>{text}\u003c/Typography>\r\n        }\r\n      \u003c/Stack>\r\n    \u003c/Box>\r\n  }\r\n  // useEffect(() => {\r\n  // }, [openTab]);\r\n  async function genSummaryMQ() {\r\n    let MQSACount = 0;\r\n    let MQSAchieve = 0;\r\n    let MQSAAcievePercent = 0;\r\n    try {\r\n      objects.filter(o => o.objType == 'MP').map((o, i) => {\r\n        if (typeof o.objMQ == 'object') {\r\n          MQSACount += o.objMQ.length;\r\n          if (o.empCode != '') {\r\n            MQSAchieve += o.objMQ.length;\r\n          }\r\n        }\r\n      });\r\n\r\n      MQSAAcievePercent = (MQSAchieve > 0 && MQSACount > 0) ? ((MQSAchieve / MQSACount) * 100).toFixed(0) : 0;\r\n      setSummaryMQ({\r\n        ...{\r\n          count: MQSACount,\r\n          achieve: MQSAchieve,\r\n          percent: MQSAAcievePercent\r\n        }\r\n      })\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  async function genSummarySA() {\r\n    let SACount = 0;\r\n    let SAchieve = 0;\r\n    let SAAcievePercent = 0;\r\n    try {\r\n      objects.filter(o => o.objType == 'MP').map((o, i) => {\r\n        if (typeof o.objSA == 'object') {\r\n          SACount += o.objSA.length;\r\n          if (o.empCode != '') {\r\n            SAchieve += o.objSA.length;\r\n          }\r\n        }\r\n      });\r\n      SAAcievePercent = (SACount > 0 && SAchieve > 0) ? ((SAchieve / SACount) * 100).toFixed(0) : 0;\r\n      setSummarySA({\r\n        ...{\r\n          count: SACount,\r\n          achieve: SAchieve,\r\n          percent: SAAcievePercent\r\n        }\r\n      })\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n  return (\r\n    \u003cdiv className='bg-[#f3f3f3] h-[100%]' style={{ fontFamily: 'apple' }}>\r\n      \u003cinput type=\"hidden\" id=\"inpObjCode\" value={objSelected?.objCode}>\u003c/input>\r\n      \u003cinput type=\"hidden\" id=\"inpLayoutCode\" value={layout}>\u003c/input>\r\n      \u003cinput type=\"hidden\" id=\"inpEmpCode\" value={\"\"} ref={refInpEmpCode}>\u003c/input>\r\n      \u003cinput type=\"hidden\" id=\"disEmpCode\" value={objSelected?.empCode}>\u003c/input>\r\n      \u003cinput type=\"hidden\" id=\"inpYMD\" value={\"\"}>\u003c/input>\r\n      \u003cinput type=\"hidden\" id=\"inpShift\" value={\"\"}>\u003c/input>\r\n      \u003cinput type=\"hidden\" id=\"inpType\" value={inpType}>\u003c/input>\r\n\r\n      \u003cGrid container height={'100%'} alignContent={'start'}>\r\n        \u003cGrid item xs={12} py={1} className=\"bg-[#556ee5]\">\r\n          \u003cdiv className=\"toolbar flex items-center px-[7.5%] gap-6 cursor-pointer\">\r\n            {\r\n              [\r\n                { text: 'MANPOWER CHECK-IN', icon: \u003cFmdGoodOutlinedIcon />, active: true },\r\n                { text: 'LINE EFFICIENCY', icon: \u003cApiSharpIcon />, active: false }\r\n              ].map((oMenu, iMenu) => {\r\n                return \u003cdiv key={iMenu} className={`${oMenu.active ? 'text-white' : 'text-[#fff9]'} flex  items-center gap-1`} style={{ letterSpacing: '1px' }}>\r\n                  {oMenu.icon}\r\n                  \u003cspan>{oMenu.text}\u003c/span>\r\n                \u003c/div>\r\n              })\r\n            }\r\n          \u003c/div>\r\n        \u003c/Grid>\r\n        \u003cGrid item xs={12}>\r\n          \u003cdiv className=\"flex items-center px-[24px] py-[16px]\">\r\n            \u003cspan className=\"text-[1.5em] font-bold text-[#484f57]\" style={{ letterSpacing: '1px' }}>MANPOWER CHECK-IN\u003c/span>\r\n          \u003c/div>\r\n        \u003c/Grid>\r\n        \u003cGrid item container xs={12} px={3} spacing={2} className=\"bg-[#f3f3f3] select-none\">\r\n          \u003cGrid container item xs={12} md={3} lg={2} spacing={2} alignContent={'start'}>\r\n            {\r\n              andon.map((oAndon, iAndon) => (\r\n                \u003cGrid key={iAndon} item xs={12} md={6} lg={12}>\r\n                  \u003cCard>\r\n                    \u003cCardHeader\r\n                      className=\"card-header bg-[#d4def9]\"\r\n                      action={\r\n                        \u003cIconButton aria-label=\"settings\">\r\n                          \u003cLoopIcon className=\"  \" />\r\n                        \u003c/IconButton>\r\n                      }\r\n                      title=\"ANDON BOARD\"\r\n                      subheader={\u003cStack direction={'row'} alignItems={'center'}>\r\n                        \u003cTypography variant=\"caption\" className={`font-semibold ${foreman?.empName != undefined ? `text-[#556ee5]` : `text-red-500 `}`}>{`${foreman?.empName != undefined ? `${foreman?.empName} (Foreman)` : ` (Foreman) Absend`}`}\u003c/Typography>\r\n                      \u003c/Stack>}\r\n                    />\r\n                    \u003cCardContent className=\"pt-2\">\r\n                      \u003cGrid container>\r\n                        \u003cGrid item xs={12}>\r\n                          \u003cTypography variant=\"caption\" className=\"text-[#484f57]\">Result {oAndon?.boardId != undefined ? `(BoardId : ${oAndon?.boardId})` : ''}\u003c/Typography>\r\n                        \u003c/Grid>\r\n                        \u003cGrid item xs={4} style={{ borderRight: '1px solid #ddd' }}>\r\n                          \u003cStack alignItems={'center'}>\r\n                            \u003cTypography variant=\"caption\">Plan\u003c/Typography>\r\n                            \u003cTypography variant=\"h4\" className=\"font-semibold\" style={{ letterSpacing: '1px', fontFamily: 'inter' }}>{oAndon.plan}\u003c/Typography>\r\n                            \u003cTypography variant=\"caption\" className=\"bg-blue-500 px-2 text-white rounded-full\">TRG : {oAndon.dailyPlan.toLocaleString('en')}\u003c/Typography>\r\n                          \u003c/Stack>\r\n                        \u003c/Grid>\r\n                        \u003cGrid item xs={4} style={{ borderRight: '1px solid #ddd' }}>\r\n                          \u003cStack alignItems={'center'} className=\"bg-gray-100-500\">\r\n                            \u003cTypography variant=\"caption\" className=\"mr-1\" >Actual\u003c/Typography>\r\n                            \u003cTypography variant=\"h4\" className=\"font-semibold text-[#3dac62]\" style={{ letterSpacing: '1px', fontFamily: 'inter' }}>{oAndon.actual}\u003c/Typography>\r\n                            \u003cStack direction={'row'}  >\r\n                              \u003cTypography variant=\"caption\" >({(oAndon.plan != 0 && oAndon.actual != 0) ? ((oAndon.actual / oAndon.plan) * 100).toFixed(2) : 0}%)\u003c/Typography>\r\n                            \u003c/Stack>\r\n                          \u003c/Stack>\r\n                        \u003c/Grid>\r\n                        \u003cGrid item xs={4}>\r\n                          \u003cStack alignItems={'center'} className=\"bg-gray-100-500\">\r\n                            \u003cTypography variant=\"caption\">Diff\u003c/Typography>\r\n                            \u003cTypography variant=\"h4\" className=\"font-semibold text-red-500\" style={{ letterSpacing: '1px', fontFamily: 'inter' }}>{oAndon.diff}\u003c/Typography>\r\n                          \u003c/Stack>\r\n                        \u003c/Grid>\r\n                      \u003c/Grid>\r\n                    \u003c/CardContent>\r\n                  \u003c/Card>\r\n                \u003c/Grid>\r\n              ))\r\n            }\r\n            \u003cGrid item xs={12} md={6} lg={12} className=\"hidden\">\r\n              \u003cCard>\r\n                \u003cCardHeader\r\n                  className=\" card-header \"\r\n                  title={\u003cStack direction={'col'} alignItems={'center'} gap={1}>\r\n                    \u003cAvatar sx={{ bgcolor: '#556ee5' }}>MQ\u003c/Avatar>\r\n                    \u003cStack>\r\n                      \u003cspan>Manual quality\u003c/span>\r\n                      \u003cspan className=\"text-[12px] text-gray-500\">ทักษะการทำงาน\u003c/span>\r\n                    \u003c/Stack>\r\n                  \u003c/Stack>}\r\n                  action={\r\n                    \u003cIconButton aria-label=\"settings\">\r\n                      \u003cEngineeringOutlinedIcon sx={{ fontSize: '1.25em' }} />\r\n                    \u003c/IconButton>\r\n                  }\r\n                />\r\n                {/* EngineeringOutlinedIcon */}\r\n                {/* and System assurance */}\r\n                \u003cCardContent>\r\n                  \u003cGrid container>\r\n                    \u003cGrid item xs={12} className=\"pb-2\">\r\n                      \u003cStack direction={'row'} alignItems={'center '} gap={2}>\r\n                        \u003cTypography variant=\"caption\" className=\"text-[#484f57] leading-0 \" >ใบอนุญาติการทำงาน\u003c/Typography>\r\n                        {\r\n                          summaryMQ.percent != 100 && \u003cspan class=\"relative flex h-2 w-2\">\r\n                            \u003cspan class=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-red-400 opacity-75\">\u003c/span>\r\n                            \u003cspan class=\"relative inline-flex rounded-full h-2 w-2 bg-red-500\">\u003c/span>\r\n                          \u003c/span>\r\n                        }\r\n                      \u003c/Stack>\r\n                    \u003c/Grid>\r\n                    \u003cGrid item xs={4} style={{ borderRight: '1px solid #ddd' }}>\r\n                      \u003cStack alignItems={'center'}>\r\n                        \u003cTypography variant=\"caption\">รายการ\u003c/Typography>\r\n\r\n                        \u003cTypography variant=\"h4\" className=\"font-semibold\" style={{ letterSpacing: '1px', fontFamily: 'inter' }}>\r\n                          {\r\n                            typeof summaryMQ.count != 'undefined' ? summaryMQ.count : 0\r\n                          }\r\n                        \u003c/Typography>\r\n                      \u003c/Stack>\r\n                    \u003c/Grid>\r\n                    \u003cGrid item xs={4} style={{ borderRight: '1px solid #ddd' }}>\r\n                      \u003cStack alignItems={'center'} className=\"bg-gray-100-500\">\r\n                        \u003cTypography variant=\"caption\">ผ่านอบรม\u003c/Typography>\r\n\r\n                        \u003cTypography variant=\"h4\" className={`font-semibold ${summaryMQ.achieve > summaryMQ.count ? 'text-[#3dac62]' : 'text-red-500'}`} style={{ letterSpacing: '1px', fontFamily: 'inter' }}>\r\n                          {\r\n                            typeof summaryMQ.achieve != 'undefined' ? summaryMQ.achieve : 0\r\n                          }\r\n                        \u003c/Typography>\r\n                        \u003cStack direction={'row'} gap={'2px'}>\r\n                          \u003cTypography variant=\"caption\" className={`${(summaryMQ.achieve > summaryMQ.count) ? 'text-[#3dac62]' : 'text-red-500'}`} style={{ letterSpacing: '1px' }}>\r\n                            {\r\n                              summaryMQ.achieve == summaryMQ.count ? `` : `-(${summaryMQ.count - summaryMQ.achieve}) รายการ`\r\n                            }\r\n                          \u003c/Typography>\r\n                          \u003cTypography variant=\"caption\">\u003c/Typography>\r\n                        \u003c/Stack>\r\n                      \u003c/Stack>\r\n                    \u003c/Grid>\r\n                    \u003cGrid item xs={4}>\r\n                      \u003cStack alignItems={'center'}>\r\n                        \u003cTypography variant=\"caption\">เปอร์เซ็น\u003c/Typography>\r\n\r\n                        \u003cStack alignItems={'center'}>\r\n                          \u003cTypography variant=\"h4\" className={`font-semibold ${summaryMQ.achieve > summaryMQ.count ? 'text-[#3dac62]' : 'text-red-500'}`} style={{ letterSpacing: '1px', fontFamily: 'inter' }}>\r\n                            {\r\n                              typeof summaryMQ.percent != 'undefined' ? summaryMQ.percent : 0\r\n                            }\r\n                            \u003cspan className={'text-[14px] text-black'}> %\u003c/span>\r\n                          \u003c/Typography>\r\n                        \u003c/Stack>\r\n                        \u003cStack direction={'row'} gap={'2px'}>\r\n                          \u003cTypography variant=\"caption\" className={`${summaryMQ.achieve > summaryMQ.count ? 'text-[#3dac62]' : 'text-red-500'}`} style={{ letterSpacing: '1px' }}>\r\n                            {\r\n                              summaryMQ.percent == 100 ? `` : `-(${100 - (summaryMQ.percent != undefined ? summaryMQ.percent : 100)}%)`\r\n                            }\r\n                          \u003c/Typography>\r\n                        \u003c/Stack>\r\n                      \u003c/Stack>\r\n                    \u003c/Grid>\r\n                  \u003c/Grid>\r\n                \u003c/CardContent>\r\n              \u003c/Card>\r\n            \u003c/Grid>\r\n            \u003cGrid item xs={12} md={6} lg={12} className=\"hidden\">\r\n              \u003cCard>\r\n                \u003cCardHeader\r\n                  className=\" card-header \"\r\n                  title={\u003cStack direction={'col'} alignItems={'center'} gap={1}>\r\n                    \u003cAvatar sx={{ bgcolor: '#556ee5' }}>SA\u003c/Avatar>\r\n                    \u003cStack>\r\n                      \u003cspan>System assurance\u003c/span>\r\n                      \u003cspan className=\"text-[12px] text-gray-500\">ทักษะเฉพาะด้าน\u003c/span>\r\n                    \u003c/Stack>\r\n                  \u003c/Stack>}\r\n                  action={\r\n                    \u003cIconButton aria-label=\"settings\">\r\n                      \u003cHandymanOutlinedIcon sx={{ fontSize: '1.25em' }} />\r\n                    \u003c/IconButton>\r\n                  }\r\n                />\r\n                \u003cCardContent>\r\n                  \u003cGrid container>\r\n                    \u003cGrid item xs={12} className=\"pb-2\">\r\n                      \u003cStack direction={'row'} alignItems={'center '} gap={2}>\r\n                        \u003cTypography variant=\"caption\" className=\"text-[#484f57] leading-0 \" >ใบอนุญาติทักษะเฉพาะด้าน\u003c/Typography>\r\n                        {\r\n                          summarySA.percent != 100 && \u003cspan class=\"relative flex h-2 w-2\">\r\n                            \u003cspan class=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-red-400 opacity-75\">\u003c/span>\r\n                            \u003cspan class=\"relative inline-flex rounded-full h-2 w-2 bg-red-500\">\u003c/span>\r\n                          \u003c/span>\r\n                        }\r\n                      \u003c/Stack>\r\n                    \u003c/Grid>\r\n                    \u003cGrid item xs={4} style={{ borderRight: '1px solid #ddd' }}>\r\n                      \u003cStack alignItems={'center'}>\r\n                        \u003cTypography variant=\"caption\">ใบอนุญาติ\u003c/Typography>\r\n                        \u003cTypography variant=\"h4\" className=\"font-semibold\" style={{ letterSpacing: '1px', fontFamily: 'inter' }}>\r\n                          {\r\n                            typeof summarySA.count != 'undefined' ? summarySA.count : 0\r\n                          }\r\n                        \u003c/Typography>\r\n                        \u003cTypography variant=\"caption\">รายการ\u003c/Typography>\r\n                      \u003c/Stack>\r\n                    \u003c/Grid>\r\n                    \u003cGrid item xs={4} style={{ borderRight: '1px solid #ddd' }}>\r\n                      \u003cStack alignItems={'center'} className=\"bg-gray-100-500\">\r\n                        \u003cTypography variant=\"caption\">ผ่านอบรม\u003c/Typography>\r\n                        \u003cTypography variant=\"h4\" className={`font-semibold ${summarySA.achieve > summarySA.count ? 'text-[#3dac62]' : 'text-red-500'}`} style={{ letterSpacing: '1px', fontFamily: 'inter' }}>\r\n                          {\r\n                            typeof summarySA.achieve != 'undefined' ? summarySA.achieve : 0\r\n                          }\r\n                        \u003c/Typography>\r\n                        \u003cStack direction={'row'} gap={'2px'}>\r\n                          \u003cTypography variant=\"caption\" className={`${summarySA.achieve > summarySA.count ? 'text-[#3dac62]' : 'text-red-500'}`} style={{ letterSpacing: '1px' }}>\r\n                            {\r\n                              summarySA.achieve == summarySA.count ? `  ` : `-(${summarySA.count - summarySA.achieve}) รายการ`\r\n                            }\r\n                          \u003c/Typography>\r\n                        \u003c/Stack>\r\n                      \u003c/Stack>\r\n                    \u003c/Grid>\r\n\r\n                    \u003cGrid item xs={4}>\r\n                      \u003cStack alignItems={'center'}>\r\n                        \u003cStack alignItems={'center'}>\r\n                          \u003cTypography variant=\"caption\">เปอร์เซ็น\u003c/Typography>\r\n\r\n                          \u003cTypography variant=\"h4\" className={`font-semibold ${summarySA.achieve > summarySA.count ? 'text-[#3dac62]' : 'text-red-500'}`} style={{ letterSpacing: '1px', fontFamily: 'inter' }}>\r\n                            {\r\n                              typeof summarySA.percent != 'undefined' ? summarySA.percent : 0\r\n                            }\r\n                            \u003cspan className={'text-[14px] text-black'}> %\u003c/span>\r\n                          \u003c/Typography>\r\n                        \u003c/Stack>\r\n                        \u003cStack direction={'row'} gap={'2px'}>\r\n                          \u003cTypography variant=\"caption\" className={`${summarySA.achieve > summarySA.count ? 'text-[#3dac62]' : 'text-red-500'}`} style={{ letterSpacing: '1px' }}>\r\n                            {\r\n                              summarySA.percent == 100 ? `` : `-(${100 - (summarySA.percent != undefined ? summarySA.percent : 100)}%)`\r\n                            }\r\n                          \u003c/Typography>\r\n                        \u003c/Stack>\r\n                      \u003c/Stack>\r\n                    \u003c/Grid>\r\n                  \u003c/Grid>\r\n                \u003c/CardContent>\r\n              \u003c/Card>\r\n            \u003c/Grid>\r\n          \u003c/Grid>\r\n          \u003cGrid container item md={9} lg={10} alignContent={'start'} spacing={2}>\r\n            \u003cGrid item xs={10}>\r\n              \u003cCard className=\"w-full h-[100%]\">\r\n                \u003cCardHeader\r\n                  className=\"bg-[#d4def9] card-header p-2\"\r\n                  title={\r\n                    \u003cStack direction={'row'}>\r\n                      \u003cStack direction={'col'} alignItems={'center'} gap={2} flex={1} pl={3}>\r\n                        \u003cspan class=\"relative flex h-3 w-3\">\r\n                          \u003cspan class=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-sky-400 opacity-75\">\u003c/span>\r\n                          \u003cspan class=\"relative inline-flex rounded-full h-3 w-3 bg-sky-500\">\u003c/span>\r\n                        \u003c/span>\r\n                        \u003cStack>\r\n                          \u003cStack direction={'row'} gap={2} alignItems={'center'}>\r\n                            \u003cspan className=\"text-[1.5em]\">{layoutSelected.layoutName}\u003c/span>\r\n                            \u003cButton variant=\"contained\" size=\"small\" onClick={() => setOpenSelectLine(true)}>เลือก\u003c/Button>\r\n                          \u003c/Stack>\r\n                          \u003cspan className=\"text-[12px] text-gray-500\">Layout\u003c/span>\r\n                        \u003c/Stack>\r\n                      \u003c/Stack>\r\n                      \u003cGrid container flex={2} className='bg-[#f9f9f9s]' >\r\n                        \u003cGrid item xs={4}>\r\n                          \u003cStack alignItems={'center'} >\r\n                            \u003cTypography variant=\"h3\" className=\"font-semibold text-[#212121]\" style={{ letterSpacing: '1px', fontFamily: 'inter' }}>\r\n                              {\r\n                                objects.filter((o => o.objType == 'MP')).length\r\n                              }\r\n                            \u003c/Typography>\r\n                            \u003cTypography variant=\"caption\" className=\"text-[#212121]\">Total Point\u003c/Typography>\r\n                          \u003c/Stack>\r\n                        \u003c/Grid>\r\n                        \u003cGrid item xs={4}>\r\n                          \u003cStack alignItems={'center'} className=\"bg-gray-100-500\">\r\n                            \u003cStack direction={'col'} alignItems={'center'}>\r\n                              \u003cTypography variant=\"h3\" className={`font-semibold ${percentCheckIn >= 100 ? 'text-[#3dac62]' : 'text-red-500'}`} style={{ letterSpacing: '1px', fontFamily: 'inter' }}>\r\n                                {\r\n                                  objects.filter((o => o.objType == 'MP' && o.empCode != '')).length\r\n                                }\r\n                              \u003c/Typography>\r\n                              \u003cKeyboardDoubleArrowDownIcon className={`animate-bounce ${percentCheckIn >= 100 ? 'text-[#3dac62]' : 'text-red-500'}`} />\r\n                            \u003c/Stack>\r\n                            \u003cTypography variant=\"caption\" className={` ${percentCheckIn >= 100 ? 'text-[#3dac62]' : 'text-red-500'}`}>Check-In (Point)\u003c/Typography>\r\n                            {/* 3dac62 */}\r\n                          \u003c/Stack>\r\n                        \u003c/Grid>\r\n\r\n                        \u003cGrid item xs={4}>\r\n                          \u003cStack alignItems={'center'}>\r\n                            \u003cTypography variant=\"h3\" className={`font-semibold `} style={{ letterSpacing: '1px', fontFamily: 'inter' }}>\r\n                              \u003cspan className={`${((objects.filter((o => o.objType == 'MP' && o.empCode != '')).length / objects.filter((o => o.objType == 'MP')).length) * 100) >= 100 ? 'text-[#3dac62]' : 'text-red-500'}`}>{\r\n                                `${((objects.filter((o => o.objType == 'MP' && o.empCode != '')).length / objects.filter((o => o.objType == 'MP')).length) * 100).toFixed(2)}`\r\n                              }\u003c/span>\r\n                              \u003cspan className={'text-[14px] text-black'}> %\u003c/span>\r\n                            \u003c/Typography>\r\n                            \u003cTypography variant=\"caption\" className={`${percentCheckIn >= 100 ? 'text-[#3dac62]' : 'text-red-500'}`}>Percent\u003c/Typography>\r\n                          \u003c/Stack>\r\n                        \u003c/Grid>\r\n                      \u003c/Grid>\r\n                    \u003c/Stack>}\r\n                />\r\n                \u003cCardContent className=\"pb-0\" style={{ borderTop: '1px solid rgb(241 241 241)' }} >\r\n                  \u003cdiv >\r\n                    \u003cdiv id=\"bg\" style={{ color: '#e9fbff', marginLeft: -5000, position: 'absolute' }}>\r\n                    \u003c/div>\r\n                    {\r\n                      (typeof layoutSelected == 'object' && Object.keys(layoutSelected).length) ?\r\n                        \u003csvg\r\n                          id=\"svgContent\"\r\n                          viewBox={`0 0 ${layoutSelected?.width} ${layoutSelected?.height}`}\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          preserveAspectRatio=\"xMidYMid meet\"\r\n                        >\u003c/svg>\r\n                        : \u003cdiv className=\"flex \">\r\n                          \u003cCircularProgress />\r\n                          \u003cspan>กำลังโหลดข้อมูล\u003c/span>\r\n                        \u003c/div>\r\n                    }\r\n                  \u003c/div>\r\n                \u003c/CardContent>\r\n              \u003c/Card>\r\n            \u003c/Grid>\r\n            \u003cGrid item xs={2}>\r\n              \u003cCard className=\"w-full h-[100%]\">\r\n                \u003cCardHeader\r\n                  className=\"bg-[#d4def9] card-header\"\r\n                  action={\r\n                    \u003cIconButton aria-label=\"settings\">\r\n                      \u003cDiversity3OutlinedIcon />\r\n                    \u003c/IconButton>\r\n                  }\r\n                  title=\"MAN\"\r\n                  subheader=\"Employee list\"\r\n                />\r\n                \u003cCardContent className=\"pb-0 pr-0\" >\r\n                  \u003cdiv style={{ height: '800px', overflow: 'auto' }}>\r\n                    \u003ctable className=\"w-[100%]\" cellspacing=\"0\" cellpadding=\"1\" border=\"0\" >\r\n                      \u003cthead>\r\n                        \u003ctr>\r\n                          \u003cth>\u003c/th>\r\n                          \u003cth>\u003c/th>\r\n                          \u003cth>\u003c/th>\r\n                        \u003c/tr>\r\n                      \u003c/thead>\r\n                      \u003ctbody>\r\n                        {\r\n                          listPosition.map((oPst, iPst) => (\r\n                            objects.filter(o => o.objPosition == oPst && o.objType == 'MP').map((o, i) => {\r\n                              return \u003ctr key={i}>\r\n                                \u003ctd>\u003cCircleIcon className={`${o.empCode != '' ? 'text-green-500' : 'text-[#ddd]'}`} sx={{ fontSize: '14px' }} />\u003c/td>\r\n                                \u003ctd className={`text-[12px] ${o.empCode != '' ? 'font-semibold text-black ' : 'text-gray-600'}`}>{o.objTitle}\u003c/td>\r\n                                \u003ctd className=\"text-center\">\r\n                                  \u003cspan className=\"text-[12px]\">{o.empCode}&nbsp;\u003c/span>\r\n                                \u003c/td>\r\n                              \u003c/tr>\r\n                            })\r\n                          ))\r\n                        }\r\n                      \u003c/tbody>\r\n                    \u003c/table>\r\n                  \u003c/div>\r\n                \u003c/CardContent>\r\n              \u003c/Card>\r\n            \u003c/Grid>\r\n          \u003c/Grid>\r\n        \u003c/Grid>\r\n      \u003c/Grid>\r\n      {/* \u003cdiv className='flex justify-between px-[13.5%] h-[5%] card-mtr' >\r\n        \u003cdiv className='w-[25%] flex gap-2  items-center '>\r\n          \u003cApiSharpIcon className='text-[18px]' />\r\n          \u003cspan className='text-[#303030] font-semibold' style={{ fontFamily: 'apple', letterSpacing: '1px' }}>DCI IoT\u003c/span>\r\n        \u003c/div>\r\n        \u003cdiv className='w-[50%] flex gap-3 justify-around items-center cursor-pointer'>\r\n          {\r\n            menu.map((oMenu, iMenu) => {\r\n              return \u003cdiv key={iMenu} className={`flex items-center gap-2 text-[#575757] hover:text-[#0071e3] transition-all duration-300 ${oMenu.active && 'menu-active'}`} style={{ letterSpacing: '1px' }}>\r\n                {\r\n                  oMenu.active && \u003cspan class=\"relative flex h-2 w-2\">\r\n                    \u003cspan class=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-sky-400 opacity-75\">\u003c/span>\r\n                    \u003cspan class=\"relative inline-flex rounded-full h-2 w-2 bg-sky-500\">\u003c/span>\r\n                  \u003c/span>\r\n                }\r\n                {oMenu.text}\u003c/div>\r\n            })\r\n          }\r\n        \u003c/div>\r\n        \u003cdiv className='w-[25%] flex items-center justify-end'>\r\n          \u003cdiv className='flex justify-end   gap-2  rounded-full items-center'>\r\n            \u003cAvatar sx={{ width: 24, height: 24, bgcolor: deepOrange[500] }}>P\u003c/Avatar>\r\n            \u003cdiv className='flex flex-col text-[12px]'>\r\n              \u003cspan className='text-[#303030]' style={{ letterSpacing: '1px' }}>Username\u003c/span>\r\n              \u003cspan className='text-[#acacac]'>Description\u003c/span>\r\n            \u003c/div>\r\n          \u003c/div>\r\n        \u003c/div>\r\n      \u003c/div>\r\n      \u003cdiv className=\"h-[85%] w-[100%] flex hidden\" >\r\n        \u003cdiv className=\"w-[15%] bg-red-50\">\r\n        \u003c/div>\r\n        \u003cdiv className=\"w-[85%] bg-gray-400\">\r\n          \u003cdiv>\r\n            MAIN L6\r\n          \u003c/div>\r\n        \u003c/div>\r\n      \u003c/div> */}\r\n      {/* \u003cdiv className='flex h-[10%] bg-[#1b1b1d] justify-center items-center  card-mtr' style={{ borderBottom: '1px solid #d6d6d6' }}>\r\n        \u003cdiv style={{ overflow: 'auto' }} className='w-[50%] bg-red flex'>\r\n          \u003cdiv className=\"bg-white\">\u003c/div>\r\n          \u003cTabs\r\n            onChange={handleSelectMenu}\r\n            value={Object.keys(layouts.filter(o => o.layoutCode == layoutSelected.layoutCode)).length ? layouts.findIndex(o => o.layoutCode == layoutSelected.layoutCode) : 0}\r\n            className='text-white'\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n            aria-label=\"scrollable auto tabs example\"\r\n          >\r\n            {\r\n              layouts.filter(o => o.layoutName != 'TEST' && o.layoutStatus == 'ACTIVE').map((oMap, iMap) => {\r\n                return \u003cTab key={iMap} icon={\u003cApiSharpIcon />} iconPosition='top' label={oMap.layoutName} className={`${oMap.layoutCode == layoutSelected.layoutCode ? 'text-[#63caff] bg-[#9ae0ff1f]' : 'text-[#afafaf]'}`}>\r\n                \u003c/Tab>\r\n              })\r\n            }\r\n          \u003c/Tabs>\r\n        \u003c/div>\r\n      \u003c/div> */}\r\n      {/* \u003cdiv className='h-[85%] justify-center'>\r\n        \u003cdiv id=\"bg\" style={{ color: '#e9fbff', marginLeft: -5000, position: 'absolute' }}>\r\n        \u003c/div>\r\n        {\r\n          (typeof layoutSelected == 'object' && Object.keys(layoutSelected).length) ?\r\n            \u003cdiv className=\"h-[95%] px-[10%]\" >\r\n              \u003cdiv className=\"card-mtr bg-white h-[100%]\" >\r\n                \u003csvg\r\n                  id=\"svgContent\"\r\n                  viewBox={`0 0 ${layoutSelected?.width} ${layoutSelected?.height}`}\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  preserveAspectRatio=\"xMidYMid meet\"\r\n                  className=\"w-[100%] h-[100%]\"\r\n                >\u003c/svg>\r\n              \u003c/div>\r\n            \u003c/div>\r\n            : \u003cdiv className=\"flex \">\r\n              \u003cCircularProgress />\r\n              \u003cspan>กำลังโหลดข้อมูล\u003c/span>\r\n            \u003c/div>\r\n        }\r\n        \u003cdiv className=\"h-[5%] bg-[#1b1b1d] card-mtr\">\r\n\r\n        \u003c/div>\r\n      \u003c/div> */}\r\n      \u003cDialogSelectLine\r\n        open={openSelectLine}\r\n        close={setOpenSelectLine}\r\n        layoutSelected={layoutSelected}\r\n      />\r\n      \u003cDialogCheckin\r\n        open={openCheckIn}\r\n        close={setOpenCheckIn}\r\n        objectCode={objectCode}\r\n        data={objSelected}\r\n        setData={setObjSelected}\r\n        refObj={refreshObject}\r\n        refHeaderManpower={getObjectOfLayout}\r\n        backdrop={setBackdrop}\r\n        inpType = {setInpType}\r\n      />\r\n      \u003cBackdrop\r\n        sx={{ color: '#fff', background: '#3f51b5', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n        open={backdrop}\r\n      >\r\n        \u003cStack alignItems={'center'} spacing={2}>\r\n          \u003cCircularProgress color=\"inherit\" />\r\n          \u003cTypography>กำลังโหลดข้อมูล\u003c/Typography>\r\n        \u003c/Stack>\r\n      \u003c/Backdrop>\r\n    \u003c/div>\r\n  );\r\n}\r\nexport default ManpowerView;\r\n","loc":{"file":"D:/git/DCI_MANPOWER_CHECKIN_APP/src/pages/Manpower/ManpowerView.jsx","line":"65","column":"1"}}))
            </script>
          </head>
          <body>
          </body>
        </html>
      