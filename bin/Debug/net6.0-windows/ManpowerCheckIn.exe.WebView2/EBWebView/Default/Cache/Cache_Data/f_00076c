import { createHotContext as __vite__createHotContext } from "/dcimanpower/@vite/client";import.meta.hot = __vite__createHotContext("/src/components/DialogCheckin.jsx");import * as RefreshRuntime from "/dcimanpower/@react-refresh";

if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/git/DCI_MANPOWER_CHECKIN_APP/src/components/DialogCheckin.jsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import __vite__cjsImport1_react_jsxDevRuntime from "/dcimanpower/node_modules/.vite/deps/react_jsx-dev-runtime.js?v=68d587f7"; const _jsxDEV = __vite__cjsImport1_react_jsxDevRuntime["jsxDEV"];
var _s = $RefreshSig$();
import __vite__cjsImport2_react from "/dcimanpower/node_modules/.vite/deps/react.js?v=68d587f7"; const React = __vite__cjsImport2_react.__esModule ? __vite__cjsImport2_react.default : __vite__cjsImport2_react; const createContext = __vite__cjsImport2_react["createContext"]; const useContext = __vite__cjsImport2_react["useContext"]; const useEffect = __vite__cjsImport2_react["useEffect"]; const useState = __vite__cjsImport2_react["useState"];
import Dialog from "/dcimanpower/node_modules/.vite/deps/@mui_material_Dialog.js?v=68d587f7";
import Button from "/dcimanpower/node_modules/.vite/deps/@mui_material_Button.js?v=68d587f7";
import { Avatar, Box, Card, CardContent, CardHeader, Divider, Grid, IconButton, Stack, Tab, Tabs, Typography, DialogContent, TableContainer, Paper, Table, TableHead, TableBody, TableRow, TableCell, InputBase, DialogTitle, DialogActions } from "/dcimanpower/node_modules/.vite/deps/@mui_material.js?v=68d587f7";
import __vite__cjsImport6_moment_moment from "/dcimanpower/node_modules/.vite/deps/moment_moment.js?v=68d587f7"; const moment = __vite__cjsImport6_moment_moment.__esModule ? __vite__cjsImport6_moment_moment.default : __vite__cjsImport6_moment_moment;
import { API_CHECK_INOUT, API_GET_MQSA_OF_LAYOUT, API_GET_OBJECT, API_GET_OBJECT_BY_CODE, API_GET_OBJECT_INFO } from "/dcimanpower/src/Service.js";
import { useDispatch, useSelector } from "/dcimanpower/node_modules/.vite/deps/react-redux.js?v=68d587f7";
import CardPosition from "/dcimanpower/src/components/CheckIN/CardPosition.jsx";
import CardEmp from "/dcimanpower/src/components/CheckIN/CardEmp.jsx";
import Timeline from "/dcimanpower/node_modules/.vite/deps/@mui_lab_Timeline.js?v=68d587f7";
import TimelineItem from "/dcimanpower/node_modules/.vite/deps/@mui_lab_TimelineItem.js?v=68d587f7";
import TimelineSeparator from "/dcimanpower/node_modules/.vite/deps/@mui_lab_TimelineSeparator.js?v=68d587f7";
import TimelineConnector from "/dcimanpower/node_modules/.vite/deps/@mui_lab_TimelineConnector.js?v=68d587f7";
import TimelineContent from "/dcimanpower/node_modules/.vite/deps/@mui_lab_TimelineContent.js?v=68d587f7";
import TimelineDot from "/dcimanpower/node_modules/.vite/deps/@mui_lab_TimelineDot.js?v=68d587f7";
import __vite__cjsImport17__mui_iconsMaterial_CheckCircle from "/dcimanpower/node_modules/.vite/deps/@mui_icons-material_CheckCircle.js?v=68d587f7"; const CheckCircleIcon = __vite__cjsImport17__mui_iconsMaterial_CheckCircle.__esModule ? __vite__cjsImport17__mui_iconsMaterial_CheckCircle.default : __vite__cjsImport17__mui_iconsMaterial_CheckCircle;
import { TimelineOppositeContent } from "/dcimanpower/node_modules/.vite/deps/@mui_lab.js?v=68d587f7";
function DialogCheckin(props) {
    _s();
    const { open, close, data, setData, refObj, refHeaderManpower, backdrop, inpType, refInpEmpCode, inpEmpCode } = props;
    const dispatch = useDispatch();
    const [loading, setLoading] = useState(true);
    const objectSelected = useSelector((state)=>state.reducer.objectSelected);
    useEffect(()=>{
        if (open) {
            init();
        }
    }, [
        open
    ]);
    const sleep = (ms)=>new Promise((r)=>setTimeout(r, ms));
    async function init() {
        const objectDetail = await API_GET_OBJECT_INFO({
            objCode: data.objCode
        });
        if (typeof objectDetail == 'object' && objectDetail.length) {
            setData(objectDetail[0]);
            inpType('OUT');
            dispatch({
                type: 'SET_OBJECT_SELECTED',
                payload: objectDetail[0]
            });
            setLoading(false);
        } else {
            inpType('IN');
        }
    }
    async function handleCheckInOut() {
        let inpEmpCode = document.querySelector('input#inpEmpCode').value;
        let inpYMD = document.querySelector('input#inpYMD').value;
        let inpShift = document.querySelector('input#inpShift').value;
        let inpType = document.querySelector('input#inpType').value;
        if (inpEmpCode != '') {
            let state = false;
            data.empCode = data?.empCode == undefined ? '' : data.empCode;
            if (data?.empCode != '' && inpType == 'OUT' || data?.empCode == '' && inpType == 'IN') {
                state = true;
            } else {
                state = false;
            }
            if (state) {
                backdrop(true);
                const checkin = await API_CHECK_INOUT({
                    "objCode": data.objCode,
                    "empCode": inpEmpCode,
                    "ckdate": inpYMD,
                    "ckshift": inpShift,
                    "cktype": inpType
                });
                console.log({
                    "objCode": data.objCode,
                    "empCode": inpEmpCode,
                    "ckdate": inpYMD,
                    "ckshift": inpShift,
                    "cktype": inpType
                });
                if (checkin.status == "1") {
                    setData({});
                    alert(`empcode : ${inpEmpCode} ,ckshift : ${inpYMD} ,ckdate : ${inpShift} ,cktype : ${inpType} ,`);
                    init();
                    refObj(data.objCode);
                    refHeaderManpower();
                    await sleep(5000);
                    backdrop(false);
                } else if (checkin.status == "0") {
                    await sleep(5000);
                    backdrop(false);
                    alert(checkin.msg);
                }
            }
        }
    }
    return /*#__PURE__*/ _jsxDEV(Dialog, {
        open: open,
        onClose: ()=>close(false),
        fullWidth: true,
        maxWidth: "lg",
        children: [
            /*#__PURE__*/ _jsxDEV(DialogTitle, {
                className: "text-center",
                children: "ข้อมูลพื้นที่ปฎิบัติงานและพนักงาน"
            }, void 0, false, {
                fileName: "D:/git/DCI_MANPOWER_CHECKIN_APP/src/components/DialogCheckin.jsx",
                lineNumber: 88,
                columnNumber: 13
            }, this),
            /*#__PURE__*/ _jsxDEV(DialogContent, {}, void 0, false, {
                fileName: "D:/git/DCI_MANPOWER_CHECKIN_APP/src/components/DialogCheckin.jsx",
                lineNumber: 89,
                columnNumber: 13
            }, this),
            /*#__PURE__*/ _jsxDEV(DialogActions, {
                children: /*#__PURE__*/ _jsxDEV(Button, {
                    onClick: ()=>close(false),
                    children: "ปิดหน้าต่าง"
                }, void 0, false, {
                    fileName: "D:/git/DCI_MANPOWER_CHECKIN_APP/src/components/DialogCheckin.jsx",
                    lineNumber: 93,
                    columnNumber: 17
                }, this)
            }, void 0, false, {
                fileName: "D:/git/DCI_MANPOWER_CHECKIN_APP/src/components/DialogCheckin.jsx",
                lineNumber: 92,
                columnNumber: 13
            }, this)
        ]
    }, void 0, true, {
        fileName: "D:/git/DCI_MANPOWER_CHECKIN_APP/src/components/DialogCheckin.jsx",
        lineNumber: 87,
        columnNumber: 9
    }, this);
}
_s(DialogCheckin, "g7ScEVtFxCdzbuCDtUi5TUobbs8=", false, function() {
    return [
        useDispatch,
        useSelector
    ];
});
_c = DialogCheckin;
export default DialogCheckin;
var _c;
$RefreshReg$(_c, "DialogCheckin");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;
RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/git/DCI_MANPOWER_CHECKIN_APP/src/components/DialogCheckin.jsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,